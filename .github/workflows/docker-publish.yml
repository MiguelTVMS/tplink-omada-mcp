name: Publish Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Dockerfile.*'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - '.github/workflows/docker-publish.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine image names
        id: meta
        run: |
          owner_lower=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lower=${owner_lower}" >> "${GITHUB_OUTPUT}"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push CLI image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ steps.meta.outputs.owner_lower }}/tplink-omada-mcp-cli:latest
            ${{ env.REGISTRY }}/${{ steps.meta.outputs.owner_lower }}/tplink-omada-mcp-cli:${{ github.sha }}

      - name: Build and push HTTP image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.http
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ steps.meta.outputs.owner_lower }}/tplink-omada-mcp-http:latest
            ${{ env.REGISTRY }}/${{ steps.meta.outputs.owner_lower }}/tplink-omada-mcp-http:${{ github.sha }}
